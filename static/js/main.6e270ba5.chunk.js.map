{"version":3,"sources":["images/stackline_logo.svg","components/Header/index.js","redux/constants/action-types.js","redux/actions/index.js","components/Side/index.js","components/Chart/index.js","components/Table/index.js","App.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","logo","alt","Component","FETCHDATA","fetchData","type","payload","Side","_Component","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","Grid","data","image","title","subtitle","tags","map","tag","Button","connect","state","Chart","ResponsiveContainer","width","height","LineChart","XAxis","dataKey","tickLine","axisLine","stroke","Tooltip","Line","strokeWidth","dot","allData","sales","objectSpread","weekEnding","parseInt","split","retailSales","Number","wholesaleSales","monthlyRetailSales","reduce","accumulator","currentValue","monthlyWholesaleSales","result","months","1","2","3","4","5","6","7","8","9","10","11","12","i","keys","ii","length","updated","Week Ending","Monthly Sale","Monthly Wholesale","push","TableComponent","apply","arguments","TableContainer","Table","TableHead","TableRow","sx","& th","color","fontWeight","TableCell","align","TableBody","row","component","scope","toLocaleString","unitsSold","retailerMargin","App","components_Header","container","spacing","item","xs","Paper","components_Side","components_Chart","components_Table","initialState","require","rootReducer","undefined","assign","store","createStore","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6e270ba5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stackline_logo.64b21497.svg\";","import React, { Component } from \"react\";\nimport logo from \"../../images/stackline_logo.svg\";\nimport \"../../App.css\";\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <img src={logo} alt={logo} className=\"logo\" />\n            </div>\n        )\n    }\n}\n\nexport default Header;","export const FETCHDATA = \"FETCHDATA\";","import { FETCHDATA } from \"../constants/action-types\";\n\nexport function fetchData() {\n    return { type: FETCHDATA, payload: {} };\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../../redux/actions\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport \"../../App.css\";\n\nexport class Side extends Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    componentDidMount() {\n        this.props.fetchData();\n    }\n\n    render() {\n        return (\n            <Grid className=\"sideContainer\">\n                <div className=\"sideProduct\">\n                    <img src={this.props.data.image} className=\"productImage\" alt=\"product\"></img>\n                    <h3>{this.props.data.title}</h3>\n                    <h6>{this.props.data.subtitle}</h6>\n                </div>\n                <div className=\"sideTags\">\n                    {this.props.data.tags.map((tag) => (\n                        <Button className=\"tags\">{tag}</Button>\n                    ))}\n                </div>\n            </Grid> \n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { data: state.data };\n}\n\nexport default connect(mapStateToProps,{fetchData})(Side);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../../redux/actions\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, Tooltip, Legend } from \"recharts\";\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n  }\n  \n  componentDidMount() {\n    this.props.fetchData();\n  }\n\n  render() {\n    return (\n      <div className=\"chartContainer\">\n        <h3 className=\"title\">Retail Sales</h3>\n        <ResponsiveContainer width=\"100%\" height={350} >\n          <LineChart data={this.props.data} >\n            <XAxis dataKey=\"Week Ending\" tickLine={false} axisLine={{ stroke: \"#c7cfd9\" }} />\n            <Tooltip />\n            <Line type=\"basis\" dataKey=\"Monthly Sale\" stroke=\"#49a9f4\" strokeWidth={2} dot={false} />\n            <Line type=\"basis\" dataKey=\"Monthly Wholesale\" stroke=\"#9aa8bc\" strokeWidth={2} dot={false} />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const dataFetched = state.data.sales;\n\n  const allData = dataFetched.map(a => ({ ...a, weekEnding: parseInt(a.weekEnding.split(\"-\")[1], 10), retailSales: Number(a.retailSales), wholesaleSales: Number(a.wholesaleSales) }));\n  \n  const monthlyRetailSales = allData.reduce((accumulator, currentValue) => {\n    accumulator[currentValue.weekEnding] = accumulator[currentValue.weekEnding] + currentValue.retailSales || currentValue.retailSales;\n    return accumulator;\n  }, {});\n\n  const monthlyWholesaleSales = allData.reduce((accumulator, currentValue) => {\n    accumulator[currentValue.weekEnding] = accumulator[currentValue.weekEnding] + currentValue.wholesaleSales || currentValue.wholesaleSales;\n    return accumulator;\n  }, {});\n\n  const result = [];\n\n  const months = {1: \"Jan\", 2: \"Feb\", 3: \"Mar\", 4: \"Apr\", 5: \"May\", 6: \"Jun\", 7: \"Jul\", 8: \"Aug\", 9: \"Sep\", 10: \"Oct\", 11: \"Nov\", 12: \"Dec\"};\n\n  for (let i = -1, keys = Object.keys(months), ii = keys.length + 1; i < ii; i++) {\n    let updated = {\"Week Ending\": months[keys[i]], \"Monthly Sale\": monthlyRetailSales[keys[i]], \"Monthly Wholesale\": monthlyWholesaleSales[keys[i]]}\n    result.push(updated);\n  }\n  return {data: result}\n}\n\nexport default connect(mapStateToProps, { fetchData })(Chart);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../../redux/actions\";\nimport TableContainer from '@mui/material/TableContainer';\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableBody from \"@mui/material/TableBody\";\n\nexport class TableComponent extends Component {\n\n    componentDidMount() {\n        this.props.fetchData();\n    }\n\n    render() {\n        return (\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow sx={{  \"& th\": {color: \"#181818\", fontWeight: \"bold\"}}}>\n                            <TableCell align=\"center\">Week Ending</TableCell>\n                            <TableCell align=\"center\">Retail Sales</TableCell>\n                            <TableCell align=\"center\">Wholesale Sales</TableCell>\n                            <TableCell align=\"center\">Units Sold</TableCell>\n                            <TableCell align=\"center\">Retailer Margin</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.props.data.sales.map((row) => (\n                        <TableRow key={row.weekEnding} sx={{  \"& th\": {color: \"#696969\"}}}>\n                            <TableCell align=\"center\" component=\"th\" scope=\"row\">\n                                {row.weekEnding.toLocaleString()}\n                            </TableCell>\n                            <TableCell align=\"center\" sx={{ color: \"#696969\"}}>\n                                {\"$\" + row.retailSales.toLocaleString()}\n                            </TableCell>\n                            <TableCell align=\"center\" sx={{ color: \"#696969\"}}>\n                                {\"$\" + row.wholesaleSales.toLocaleString()}\n                            </TableCell>\n                            <TableCell align=\"center\" sx={{ color: \"#696969\"}}>\n                                {\"$\" + row.unitsSold.toLocaleString()}\n                            </TableCell>\n                            <TableCell align=\"center\" sx={{ color: \"#696969\"}}>\n                                {\"$\" + row.retailerMargin.toLocaleString()}\n                            </TableCell>\n                        </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return { data: state.data };\n}\n\nexport default connect(mapStateToProps, { fetchData })(TableComponent);","import React, { Component } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport Header from \"./components/Header\";\nimport Side from \"./components/Side\";\nimport Chart from \"./components/Chart\";\nimport Table from \"./components/Table\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Grid container spacing={3} className=\"gridContainer\">\n          <Grid item xs={12}>\n            <Paper className=\"headerContainer\">\n              {/* <Header /> */}\n            </Paper>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Paper className=\"sideContainer\">\n              <Side />\n            </Paper>\n          </Grid>\n\n          <Grid item xs={9}>\n            <Paper className=\"chartContainer\">\n              <Chart />\n            </Paper>\n          </Grid>\n\n          <Grid item xs={3}>\n            <Paper>\n              {/* tags component goes here */}\n            </Paper>\n          </Grid>\n\n          <Grid item xs={9}>\n            <Paper className=\"tableContainer\">\n              <Table />\n            </Paper>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { FETCHDATA } from \"../constants/action-types\";\nvar payload = require(\"../../data/stackline_frontend_assessment_data_2021.json\");\n\nconst initialState = {\n    data : payload[0]\n};\n\nfunction rootReducer(state = initialState, action) {\n    if (action.type === FETCHDATA) {\n        return Object.assign({}, state,\n            { data: state.data });\n    }\n    return state;\n}\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { render } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport store from \"./redux/store\";\n\n// const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nrender(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}